#
# Copyright (c) 2009-2012, Reto Grieder
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# This software is provided 'as-is', without any express or implied warranty.
#

INCLUDE(FlagUtilities)
INCLUDE(PrecompiledHeaderFiles)
INCLUDE(SourceFileUtilities)


#################### Options ####################

# Use dummy implementations for the devices?
OPTION(TRACKER_DUMMY " Use dummy implementations for the devices" FALSE)


############## Configured Headers ###############

SET(GENERATED_FILE_COMMENT
   "DO NOT EDIT THIS FILE! <br>
    It has been automatically generated by CMake from TrackerConfig.h.in")
# Copy and configure TrackerConfig which gets included in every file
CONFIGURE_FILE(TrackerConfig.h.in ${CMAKE_CURRENT_BINARY_DIR}/TrackerConfig.h)

SET(TRACKER_CONFIG_FILES
  ${CMAKE_CURRENT_BINARY_DIR}/TrackerConfig.h
  ${CMAKE_CURRENT_SOURCE_DIR}/TrackerConfig.h.in
)


################# Source Files ##################

SET_SOURCE_FILES(TRACKER_SRC_FILES
     Main.cc

  QT Camera.h               Camera.cc
  QT Controller.h           Controller.cc
     CorrelationImage.h     CorrelationImage.cc
     Correlator.h           Correlator.cc
     CurveFitter.h          CurveFitter.cc
     Dac.h
  QT DraggableLabel.h       DraggableLabel.cc
     Exception.h            Exception.cc
  QT FocusTracker.h         FocusTracker.cc
  QT Logger.h               Logger.cc
  QT MainWindow.ui
  QT MainWindow.h           MainWindow.cc
     Microscope.h           Microscope.cc
     PathConfig.h           PathConfig.cc
  QT StoragePath.ui
  QT ComPorts.ui
        #QT FilterSettings.ui
  QT ScaleFactor.ui
  QT Stretcher.ui
  QT SetUpHome.ui
  QT PressureSensor.h       PressureSensor.cc
  QT LinearMotor.h          LinearMotor.cc
  QT MessagesHandler.h      MessagesHandler.cc
  QT AutoStretch.h          AutoStretch.cc
     SerialInterface.h      SerialInterface.cc
     Singleton.h
  QT Stage.h
  QT Thread.h
  QT TimeSpinBox.h          TimeSpinBox.cc
     Timing.h               Timing.cc
     TMath.h
     TrackerAssert.h
  QT TrackerIcons.qrc
     TrackerPrereqs.h
     TrackerConfig.h.in
     Utils.h
  QT MyGraphicsView.h       MyGraphicsView.cc
  QT QCustomPlot/QCustomPlot.h	QCustomPlot/QCustomPlot.cpp
     lmfit/lmfit.h          lmfit/lmfit.c
     Profiler.h
     FocusTracker.h         FocusTracker.cc
  QT Lamp.h                 Lamp.cc
     ${CMAKE_CURRENT_BINARY_DIR}/TrackerConfig.h
)

IF(TRACKER_DUMMY)
  ADD_SOURCE_FILES(TRACKER_SRC_FILES
    QT dummy/DummyCamera.h       dummy/DummyCamera.cc
       dummy/DummyDac.h          dummy/DummyDac.cc
    QT dummy/DummyMicroscope.h   dummy/DummyMicroscope.cc
    QT dummy/DummyStage.h        dummy/DummyStage.cc
       dummy/gaussianblur.h
  )
ELSEIF(WIN32)
  ADD_SOURCE_FILES(TRACKER_SRC_FILES
    QT windows/WindowsCamera.h   windows/WindowsCamera.cc
       windows/WindowsDac.h      windows/WindowsDac.cc
    QT windows/WindowsStage.h    windows/WindowsStage.cc
  )
ENDIF()


############# Configure Executable ##############

# Handle precompiled header files
OPTION(USE_PRECOMPILED_HEADER_FILES "Enable or disable precompiled header files" TRUE)
IF(USE_PRECOMPILED_HEADER_FILES)
  PRECOMPILED_HEADER_FILES_PRE_TARGET(tracker TrackerPrecompiledHeaders.h TRACKER_SRC_FILES)
ENDIF()

# Generate the source groups (file hierarchy inside VS solution)
GENERATE_SOURCE_GROUPS(${TRACKER_SRC_FILES})

# Add the executable
OPTION(USE_WINMAIN "Use WinMain (doesn't show console) or main" FALSE)
IF(USE_WINMAIN)
  ADD_EXECUTABLE(tracker WIN32 ${TRACKER_SRC_FILES})
ELSE()
  ADD_EXECUTABLE(tracker ${TRACKER_SRC_FILES})
ENDIF()


################# Dependencies ##################

INCLUDE_DIRECTORIES(
  ${FFTW3_INCLUDE_DIR}
  ${OASIS_INCLUDE_DIR}
  ${NIDAQ_INCLUDE_DIR}
  ${FXLIB_INCLUDE_DIR}
  ${AHM_INCLUDE_DIR}
  ${QTSERIALPORT_INCUDE_DIR}

  # For subfolders
  .

  # Make Qt generated header files and TrackerConfig.h visible
  ${CMAKE_CURRENT_BINARY_DIR}
)

# Link dependencies
TARGET_LINK_LIBRARIES(tracker
  ${QT_QTCORE_LIBRARY}
  ${QT_QTGUI_LIBRARY}
  ${QT_QTMAIN_LIBRARY}
  ${FFTW3_LIBRARY}
  ${OASIS_LIBRARY}
  ${NIDAQ_LIBRARY}
  ${FXLIB_LIBRARY}
  ${AHM_LIBRARIES}
  ${QTSERIALPORT_LIBRARY}
  wxctb
  gauge
)

# Make sure FFTW gets linked properly
ADD_COMPILER_FLAGS("-DFFTW_DLL")

# Visual Leak Dectector configuration
IF(VLD_FOUND)
  OPTION(USE_VISUAL_LEAK_DETECTOR "Memory leak detector" OFF)
  IF(USE_VISUAL_LEAK_DETECTOR)
    # Force library linking by forcing the inclusion of a symbol
    ADD_LINKER_FLAGS("-INCLUDE:__imp_?vld@@3VVisualLeakDetector@@A" Debug)
    IF(MSVC90)
      # VS 2008 incremental linker crashes with /INCLUDE most of the time
      REMOVE_LINKER_FLAGS("-INCREMENTAL:YES" Debug)
      ADD_LINKER_FLAGS   ("-INCREMENTAL:NO"  Debug)
    ENDIF()

    IF(CMAKE_SIZEOF_VOID_P EQUAL 8) # 64 Bit
      MESSAGE(STATUS "Warning: When using VLD for 64 bit, you will have to change the binary directory in the PATH variable!")
    ENDIF()

    # Include directory and library linking
    INCLUDE_DIRECTORIES(${VLD_INCLUDE_DIR})
    TARGET_LINK_LIBRARIES(tracker debug ${VLD_LIBRARY})
  ENDIF()
ENDIF()

################# Installation ##################

# Install the executable
INSTALL(TARGETS tracker
  RUNTIME DESTINATION ${RUNTIME_INSTALL_DIRECTORY}
  LIBRARY DESTINATION ${LIBRARY_INSTALL_DIRECTORY}
)


##################### Misc ######################

# When using Visual Studio we want to use the output directory as working
# directory and we also want to specify where the external dlls
# (ahm, libfx, fftw, etc.) are. The problem hereby is that these information cannot
# be specified in CMake because they are not stored in the actual project file.
# This workaround will create a configured *.vcproj.user file that holds the
# right values. When starting the solution for the first time,
# these get written to the *vcproj.yourPCname.yourname.user
IF(MSVC)
  IF(CMAKE_CL_64)
    SET(MSVC_PLATFORM "x64")
  ELSE()
    SET(MSVC_PLATFORM "Win32")
  ENDIF()
  STRING(REGEX REPLACE "^Visual Studio ([0-9][0-9]?) .*$" "\\1"
         VISUAL_STUDIO_VERSION_SIMPLE "${CMAKE_GENERATOR}")
  CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/tracker.vcproj.user.in" "${CMAKE_CURRENT_BINARY_DIR}/tracker.vcproj.user")
ENDIF(MSVC)
